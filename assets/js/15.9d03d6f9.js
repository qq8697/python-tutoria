(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{374:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"变量和基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量和基本数据类型"}},[s._v("#")]),s._v(" 变量和基本数据类型")]),s._v(" "),a("h2",{attrs:{id:"变量、引用和（数据）对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量、引用和（数据）对象"}},[s._v("#")]),s._v(" 变量、引用和（数据）对象")]),s._v(" "),a("p",[a("strong",[s._v("变量")]),s._v("，python 中任何数据都是“对象”，变量用来"),a("strong",[s._v("指向这些对象")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ABC'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'str'>")]),s._v("\n\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'XYZ'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'ABC'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ol",[a("li",[s._v("使用 "),a("code",[s._v("type()")]),s._v(" 函数查看变量的类型，变量的类型指的是变量所指的内存中对象的类型。")]),s._v(" "),a("li",[a("code",[s._v("b = a")]),s._v(" 将变量赋值给变量，是"),a("strong",[s._v("让变量 "),a("code",[s._v("b")]),s._v(" 指向真正的对象，该对象是变量 "),a("code",[s._v("a")]),s._v(" 所指向的对象")]),s._v("，随后对变量 "),a("code",[s._v("a")]),s._v(" 的赋值不影响变量 "),a("code",[s._v("b")]),s._v(" 的指向。")])]),s._v(" "),a("p",[a("strong",[s._v("引用")]),a("br"),s._v("\npython 中变量和数据是分开存储的：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("数据保存在内存的一个位置")]),s._v("；")]),s._v(" "),a("li",[a("strong",[s._v("变量保存着数据在内存中的地址")]),s._v("，"),a("strong",[s._v("变量中记录数据的地址，就叫做引用")]),s._v("。（使用 "),a("code",[s._v("id()")]),s._v(" 函数可以查看变量中记录的数据的内存地址）")])]),s._v(" "),a("p",[s._v("如果变量已经定义，对其"),a("strong",[s._v("再赋值时，本质上是修改了数据的引用")]),s._v("，不再对之前的数据引用，改为对新的数据引用。（"),a("strong",[s._v("后续会讲到函数，其实参和返回值传递的是数据的引用")]),s._v("，不是数据本身）")]),s._v(" "),a("h2",{attrs:{id:"番内-类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#番内-类型判断"}},[s._v("#")]),s._v(" 番内 - 类型判断")]),s._v(" "),a("p",[s._v("可以使用 "),a("code",[s._v("type")]),s._v(" 函数和 "),a("code",[s._v("isinstance")]),s._v(" 函数进行类型判断：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("P")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# C 类继承自 P 类")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("pass")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# False")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("isinstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# True")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ol",[a("li",[a("code",[s._v("type")]),s._v(" 查询变量所指的对象的类型，不会认为子类是一种父类类型。")]),s._v(" "),a("li",[a("code",[s._v("isinstance")]),s._v(" 判断变量所指的对象是否是某一类的实例，认为子类是一种父类类型。")])]),s._v(" "),a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[s._v("#")]),s._v(" 基本数据类型")]),s._v(" "),a("h3",{attrs:{id:"_1-数值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数值类型"}},[s._v("#")]),s._v(" 1. 数值类型")]),s._v(" "),a("p",[s._v("python3 支持整数 "),a("code",[s._v("int")]),s._v("、浮点数 "),a("code",[s._v("float")]),s._v("、布尔 "),a("code",[s._v("bool")]),s._v("、 复数 "),a("code",[s._v("complex")]),s._v("。")]),s._v(" "),a("ol",[a("li",[s._v("没有 python2 中的 "),a("code",[s._v("long")]),s._v(" 。")]),s._v(" "),a("li",[s._v("表示布尔类型的 "),a("code",[s._v("True")]),s._v(" 和 "),a("code",[s._v("Fales")]),s._v("，他们的值是 1 和 0 ，可以和数字相加减。")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3j")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <class 'int'> <class 'float'> <class 'bool'> <class 'complex'>")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("说明：")]),s._v(" "),a("ol",[a("li",[s._v("数字类型转换（整数计算是精确的，浮点数计算会四舍五入，与机器有关）"),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("complex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-字符串-str（字符序列类型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串-str（字符序列类型）"}},[s._v("#")]),s._v(" 2. 字符串 "),a("code",[s._v("str")]),s._v("（字符序列类型）")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("字符串不能改变；")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'d'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'str' object does not support item assignment")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("索引： 左往右 "),a("code",[s._v("0")]),s._v(" 开始，右往左 "),a("code",[s._v("-1")]),s._v(" 开始；")])]),s._v(" "),a("li",[a("p",[s._v("切片： 左闭右开 "),a("code",[s._v("[)")]),s._v("；")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ab")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ab")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("+")]),s._v(" 连接字符串， "),a("code",[s._v("*")]),s._v(" 复制字符串 （创建的都是新的字符串对象）")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("\\")]),s._v(" 转义，"),a("code",[s._v("r")]),s._v(" 原始字符串（"),a("code",[s._v("r'xxx'")]),s._v("内部的字符串不转义）")])]),s._v(" "),a("li",[a("p",[s._v("多行字符串（同样可以加"),a("code",[s._v("r")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("HTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v("'''\n<HTML>\n  <HEAD>\n\t<TITLE> title </TITLE>\n  </HEAD>\n  <BODY>\n\t<div> content </div>\n  </BODY>\n</HTML>\n'''")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("%")]),s._v(" 格式化字符串")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("%s")]),s._v("： 字符串")]),s._v(" "),a("li",[a("code",[s._v("%d")]),s._v("： 有符号十进制数，"),a("code",[s._v("%06d")]),s._v(" 表示输出的整数显示位数，不足的地方用 0 补全")]),s._v(" "),a("li",[a("code",[s._v("%f")]),s._v("： 浮点数 "),a("code",[s._v("%.2f")]),s._v(" 表示小数点后只显示两位")]),s._v(" "),a("li",[a("code",[s._v("%%")]),s._v("： 输出 "),a("code",[s._v("%")]),s._v(" "),a("code",[s._v("%.2f%%")])])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.25")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'百分比 %.2f%%'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <=> str * num")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'百分比 %.2f%%'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"番外-字符串和编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#番外-字符串和编码"}},[s._v("#")]),s._v(" 番外 - 字符串和编码")]),s._v(" "),a("p",[s._v("为什么要编码？ -> "),a("strong",[s._v("计算机只能处理数字，处理文本需先转换为数字")]),s._v("。")]),s._v(" "),a("p",[s._v("常见编码：")]),s._v(" "),a("ol",[a("li",[s._v("ASCII： 1字节；")]),s._v(" "),a("li",[s._v("Unicode： 2字节；")]),s._v(" "),a("li",[s._v("UTF-8： 1-6字节可变长，英文1字节，中文3字节，生僻字符4-6字节 => 包含ASCII。")])]),s._v(" "),a("p",[s._v("常见的编码工作方式：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("计算机内存中使用 Unicode 编码，当要保存到硬盘或者网络传输时转换为 UTF-8")]),s._v("；")]),s._v(" "),a("li",[s._v("操作文本文件时，UTF-8 编码的文本文件转换为 Unicode 编码到内存中。")])]),s._v(" "),a("p",[s._v("ps. python3 中的字符串在内存中是以 Unicode 编码的，所以支持多种语言。")]),s._v(" "),a("h3",{attrs:{id:"番内-python-的编码和解码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#番内-python-的编码和解码"}},[s._v("#")]),s._v(" 番内 - python 的编码和解码")]),s._v(" "),a("p",[s._v("python 中的 "),a("code",[s._v("'ABC'")]),s._v(" 和 "),a("code",[s._v("b'ABC'")]),s._v("：")]),s._v(" "),a("ol",[a("li",[s._v("前者是字符串 "),a("code",[s._v("str")]),s._v("，一个字符对应若干字节；")]),s._v(" "),a("li",[s._v("后者是字节数组 "),a("code",[s._v("bytes")]),s._v("，每个“字符”只占用一个字节。")])]),s._v(" "),a("p",[s._v("使用 python 开发时的编码和解码操作：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("需要保存到硬盘或者在网络上传输时需要把 "),a("code",[s._v("str")]),s._v(" 变为以字节为单位的 "),a("code",[s._v("bytes")])]),s._v(" -> 使用 "),a("code",[s._v("str")]),s._v(" 的 "),a("code",[s._v("encode()")]),s._v(" 方法可以"),a("strong",[s._v("编码")]),s._v("为指定的 "),a("code",[s._v("bytes")]),s._v("\n；")]),s._v(" "),a("li",[s._v("从硬盘或者网络读到的字节流，需要变为 "),a("code",[s._v("str")]),s._v(" -> 使用 "),a("code",[s._v("bytes")]),s._v(" 的 "),a("code",[s._v("decode()")]),s._v(" 方法解码。")])]),s._v(" "),a("p",[s._v("ps. python2 中 .py 文本文件包含中文时，需要指定编码方式为 UTF-8（python3 不需要），python 解释器读取 .py 文件时按 UTF-8 读取才不会出现乱码，如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_3-列表-list（序列类型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-列表-list（序列类型）"}},[s._v("#")]),s._v(" 3. 列表 "),a("code",[s._v("list")]),s._v("（序列类型）")]),s._v(" "),a("p",[s._v("列表通常用于存储同类数据的集合（相同是为了遍历，当然也可以不相同）")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("列表中的元素可以改变；")])]),s._v(" "),a("li",[a("p",[s._v("索引： 左往右 "),a("code",[s._v("0")]),s._v(" 开始，右往左 "),a("code",[s._v("-1")]),s._v(" 开始；")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [1,2,6]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("切片： 左闭右开；")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [1, 2, 3]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [1, 2, 3]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("+")]),s._v(" 连接列表， "),a("code",[s._v("*")]),s._v(" 复制列表内容。")])])]),s._v(" "),a("h3",{attrs:{id:"_4-元组-tuple（序列类型）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-元组-tuple（序列类型）"}},[s._v("#")]),s._v(" 4. 元组 "),a("code",[s._v("tuple")]),s._v("（序列类型）")]),s._v(" "),a("p",[s._v("通常用于存储异构数据的集合（如 "),a("code",[s._v("enumerate()")]),s._v(" 生成的二元组）；还用于数据不可变的同类数据集合")]),s._v(" "),a("ol",[a("li",[s._v("元组中的元素不可修改；（可以把字符串看做特殊的元组）")]),s._v(" "),a("li",[s._v("索引：左往右 "),a("code",[s._v("0")]),s._v(" 开始，右往左 "),a("code",[s._v("-1")]),s._v(" 开始；")]),s._v(" "),a("li",[s._v("切片： 左闭右开；")]),s._v(" "),a("li",[a("code",[s._v("+")]),s._v(" 连接元组， "),a("code",[s._v("*")]),s._v(" 复制元组内容；")]),s._v(" "),a("li",[s._v("空元组和单元素元组 "),a("code",[s._v("null_tuple = ()")]),s._v("， "),a("code",[s._v("single_tuple = (5, )")]),s._v("；")]),s._v(" "),a("li",[s._v("应用场景：\n"),a("ol",[a("li",[a("p",[s._v("作为函数的参数和返回值，可以一次传递多个参数和一次返回多个数据；")])]),s._v(" "),a("li",[a("p",[s._v("格式化字符串，第二个 "),a("code",[s._v("%")]),s._v(" 后的本质是元组。")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sj'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s 年龄是 %d"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sj'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s 年龄是 %d"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sj'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s 年龄是 %d"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("tuple")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ol",[a("li",[a("strong",[s._v("组成元组的是逗号，括号是可选的")]),s._v("，括号主要用于非空元组和避免语句歧义（如 "),a("code",[s._v("f(a,b,c)")]),s._v("和"),a("code",[s._v("f((a,b,c))")]),s._v(" ，前者是带有 3 个参数的调用，后者是元组作为唯一参数）")])])]),s._v(" "),a("li",[a("p",[s._v("让列表不可被修改")])])])])]),s._v(" "),a("p",[s._v("ps. "),a("code",[s._v("str")]),s._v("、"),a("code",[s._v("list")]),s._v(" 和 "),a("code",[s._v("tuple")]),s._v(" 都属于 "),a("code",[s._v("sequence")]),s._v("（序列），下一节会讲 python 中序列的相关方法。")]),s._v(" "),a("h3",{attrs:{id:"_5-字典-dict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-字典-dict"}},[s._v("#")]),s._v(" 5. 字典 "),a("code",[s._v("dict")])]),s._v(" "),a("p",[s._v("通常列表是有序数据的集合，字典是无序数据的集合，元素是 "),a("code",[s._v("key")]),s._v(" / "),a("code",[s._v("value")]),s._v(" 对，"),a("code",[s._v("key")]),s._v(" 不可以重复")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("student "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",[a("li",[s._v("字典的 "),a("code",[s._v("key")]),s._v(" 必须为不可变类型；（不可变类型本节后续讲解）")]),s._v(" "),a("li",[s._v("获取值： "),a("code",[s._v("d[key]")]),s._v(" 用字典没有的 "),a("code",[s._v("key")]),s._v(" 访问数据，会报 "),a("code",[s._v("KeyError")]),s._v(" 错误，可以使用 "),a("code",[s._v("d.get(key)")]),s._v(" 方法，如果 "),a("code",[s._v("key")]),s._v(" 不存在，可以返回 "),a("code",[s._v("None")]),s._v(" 或指定的值；")]),s._v(" "),a("li",[s._v("设置值： "),a("code",[s._v("d[key] = value")]),s._v("；")]),s._v(" "),a("li",[s._v("空字典： "),a("code",[s._v("{}")]),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"_6-集合-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-集合-set"}},[s._v("#")]),s._v(" 6. 集合 "),a("code",[s._v("set")])]),s._v(" "),a("p",[s._v("通常用于成员关系测试和"),a("strong",[s._v("删除重复元素")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("student "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jim'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Mary'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jack'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Rose'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出集合，重复的元素被自动去掉")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Rose'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 成员测试")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",[a("li",[s._v("集合的元素同字典的 key 一样，必须为不可变类型；")]),s._v(" "),a("li",[s._v("创建空集合 "),a("code",[s._v("set()")]),s._v(" 而不是 "),a("code",[s._v("{}")]),s._v("，"),a("code",[s._v("{}")]),s._v(" 用于创建空字典；")]),s._v(" "),a("li",[s._v("集合操作（并、交、差、异或）：")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abracadabra'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alacazam'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 和 b 的并集")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 和 b 的交集")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 和 b 的差集")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a 和 b 的异或")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"番内：可变类型和不可变类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#番内：可变类型和不可变类型"}},[s._v("#")]),s._v(" 番内："),a("strong",[s._v("可变类型和不可变类型")]),s._v("!!!")]),s._v(" "),a("p",[s._v("可变与否指的是"),a("strong",[s._v("内存中的数据是否可以被修改")]),s._v("，不好理解，先看下面的例子：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("一开始 "),a("code",[s._v("x = 18")]),s._v("，开辟一块地址为 496261664 的内存，即 "),a("code",[s._v("18")]),s._v(" 对应的地址为 496261664，后来 "),a("code",[s._v("x = 19")]),s._v(" ，重新开辟一块地址为 496261680 的内存来放 "),a("code",[s._v("19")]),s._v("，可以看到"),a("strong",[s._v("不变的意思是指 "),a("code",[s._v("18")]),s._v(" 和 "),a("code",[s._v("19")]),s._v(" 在内存中的地址不会改变")]),s._v("，将 "),a("code",[s._v("18")]),s._v(" 赋值给 "),a("code",[s._v("y")]),s._v(" 时，"),a("code",[s._v("y")]),s._v(" 指向的地址即为 496261664。")]),s._v(" "),a("p",[s._v("所以，理解如下：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("不可变数据类型的数据在内存中的地址不变")]),s._v("，即"),a("strong",[s._v("不可变数据类型对应的变量所指向的内存地址处的值是不可以改变的")]),s._v("；")]),s._v(" "),a("li",[s._v("可变数据类型对应的变量所指向的内存地址处的值是可以改变的。")])]),s._v(" "),a("p",[s._v("还是不好理解？那再换种说法：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("不可变数据类型：当该数据类型对应的变量的值发生了改变，那么它对应的内存地址也会发生改变")]),s._v("（引用了新的对象）；")]),s._v(" "),a("li",[s._v("可变数据类型：当该数据类型的对应变量的值发生了改变，那么它对应的内存地址不发生改变（即内存中的数据被修改）。")])]),s._v(" "),a("p",[s._v("可变类型： （字典、列表、集合）")]),s._v(" "),a("ol",[a("li",[s._v("dict")]),s._v(" "),a("li",[s._v("list")]),s._v(" "),a("li",[s._v("set")])]),s._v(" "),a("p",[s._v("不可变类型：（数字、字符串和元组）")]),s._v(" "),a("ol",[a("li",[s._v("str")]),s._v(" "),a("li",[s._v("tuple")]),s._v(" "),a("li",[s._v("int、float、bool、complex")])]),s._v(" "),a("p",[s._v("几点说明：")]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("可变数据类型的数据变化是通过变量的方法来实现的，而不是指引用另一个数据对象")]),s._v("（变量指向的对象是否改变与是否是可变数据类型无关，变量指向的对象可以随意改变，改变后不再引用原内存地址的数据，而是新内存地址的数据）")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 改变数据 a.append()/pop()/..")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 引用新数据")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("不可变数据类型的对象调用自身的方法，也不会改变对象的内容，而是创建新的对象并返回")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("字典的 "),a("code",[s._v("key")]),s._v(" 只能使用不可变类型的数据的原因：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以")]),s._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 报错 -> unhashable")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在 python 中，"),a("strong",[s._v("设置字典的 "),a("code",[s._v("key/value")]),s._v(" 时，会首先对 "),a("code",[s._v("key")]),s._v(" 进行 hash，计算 value 的存储位置")]),s._v("，如果使用可变数据类型会使相同的 key 得到不同的hash结果，导致 "),a("code",[s._v("value")]),s._v(" 取值错误。\npython 内置的 "),a("code",[s._v("hash()")]),s._v(" 函数接收一个不可变类型的数据作为参数，返回一个整数，所以 "),a("code",[s._v("key")]),s._v(" 必须是不可变类型的数据。")])]),s._v(" "),a("li",[a("p",[s._v("集合的元素同字典的 "),a("code",[s._v("key")]),s._v(" 一样，必须为不可变类型\n"),a("code",[s._v("set")]),s._v(" 和 "),a("code",[s._v("dict")]),s._v(" 的唯一区别仅在于没有存储对应的value，但是，"),a("code",[s._v("set")]),s._v(" 的原理和 "),a("code",[s._v("dict")]),s._v(" 一样，所以，同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证 "),a("code",[s._v("set")]),s._v(" 内部“不会有重复元素”。")])]),s._v(" "),a("li",[a("p",[s._v("“可变”的 "),a("code",[s._v("tuple")])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'X'")]),s._v("\nt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Y'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ('a', 'b', ['X', 'Y'])")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("变量 "),a("code",[s._v("t")]),s._v(" 指向内存中 "),a("code",[s._v("tuple")]),s._v(" 数据，可以看到两次打印变量 "),a("code",[s._v("t")]),s._v(" 引用的数据对象的内存地址的确也是相同的，可以验证其不可变数据类型。"),a("br"),s._v("\n为什么看起来其又是改变了呢？ tuple是“不可变数据类型”，即内存中的数据不变，即 "),a("code",[s._v("tuple")]),s._v(" 数据索引 "),a("code",[s._v("2")]),s._v(" 的变量指向的 "),a("code",[s._v("list")]),s._v(" 不会改变，但 "),a("code",[s._v("list")]),s._v(" 是“可变数据类型”，其索引 "),a("code",[s._v("0")]),s._v(" 和 "),a("code",[s._v("1")]),s._v(" 指向的内存地址是可以改变的。看起来是 "),a("code",[s._v("tuple")]),s._v(" 的数据改变了，实际上是因为 "),a("code",[s._v("list")]),s._v(" 的数据改变了。")])])]),s._v(" "),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),a("ol",[a("li",[s._v("官网 "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("内置数据类型"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html#numeric-types-int-float-complex",target:"_blank",rel:"noopener noreferrer"}},[s._v("Numeric Types — int, float, complex"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html#text-sequence-type-str",target:"_blank",rel:"noopener noreferrer"}},[s._v("Text Sequence Type — str"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html#sequence-types-list-tuple-range",target:"_blank",rel:"noopener noreferrer"}},[s._v("Sequence Types — list, tuple, range"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html#set-types-set-frozenset",target:"_blank",rel:"noopener noreferrer"}},[s._v("Set Types — set, frozenset"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/stdtypes.html#mapping-types-dict",target:"_blank",rel:"noopener noreferrer"}},[s._v("Mapping Types — dict"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/reference/lexical_analysis.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("lexical_analysis"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("菜鸟教程 "),a("a",{attrs:{href:"https://www.runoob.com/python3/python3-data-type.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python3 基本数据类型"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("廖雪峰 "),a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1016959663602400/1017075323632896",target:"_blank",rel:"noopener noreferrer"}},[s._v("字符串和编码"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);