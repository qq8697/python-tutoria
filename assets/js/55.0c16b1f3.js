(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{420:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"加密验证服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加密验证服务"}},[s._v("#")]),s._v(" 加密验证服务")]),s._v(" "),a("h2",{attrs:{id:"消息摘要算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息摘要算法"}},[s._v("#")]),s._v(" 消息摘要算法")]),s._v(" "),a("p",[s._v("消息摘要算法（也称哈希算法、散列算法、哈希函数、散列函数）：是一个单向函数，通过这个函数"),a("strong",[s._v("把任意长度的数据转换为一个固定长度的数据串")]),s._v("。主要用在"),a("strong",[s._v("验证数据的完整性")]),s._v("，用于判断原始数据是否被篡改，对原始数据的任意改动都会导致摘要结果的不同。")]),s._v(" "),a("p",[s._v("不同的数据通过同一个哈希算法是否能够得到相同的摘要？"),a("br"),s._v("\n有可能。任何哈希算法都是把无限多的数据集合映射到一个有限的集合中，出现相同的摘要这种情况称为碰撞。")]),s._v(" "),a("p",[s._v("常用消息摘要算法：")]),s._v(" "),a("ul",[a("li",[s._v("MD5（Message-Digest Algorithm 5）")]),s._v(" "),a("li",[s._v("SHA1（Secure Hash Algorithm）、SHA256、SHA384、SHA512")])]),s._v(" "),a("h2",{attrs:{id:"hashlib-消息摘要算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashlib-消息摘要算法"}},[s._v("#")]),s._v(" hashlib 消息摘要算法")]),s._v(" "),a("p",[a("code",[s._v("hashlib")]),s._v(" 模块为不同的消息摘要算法提供了通用的接口：")]),s._v(" "),a("ul",[a("li",[s._v("为各 hash 算法提供了对应的构造器方法；")]),s._v(" "),a("li",[s._v("这些构造器都返回一个 "),a("code",[s._v("hash")]),s._v(" 对象。")])]),s._v(" "),a("p",[s._v("此模块中，")]),s._v(" "),a("ul",[a("li",[s._v("总是可用的构造器有 "),a("code",[s._v("md5()")]),s._v("、"),a("code",[s._v("sha1()")]),s._v("、"),a("code",[s._v("sha224()")]),s._v("、"),a("code",[s._v("sha256()")]),s._v("、"),a("code",[s._v("sha384()")]),s._v(" and "),a("code",[s._v("sha512()")]),s._v("；")]),s._v(" "),a("li",[s._v("根据 Python 所使用的 OpenSSL 库还可以提供其它算法。（OpenSSL 是一个开源软件包，包括 3 个功能部分：SSL协议库、 应用程序和密码算法）")])]),s._v(" "),a("p",[s._v("消息摘要算法的使用示例：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成摘要")]),s._v("\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("digest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 简要写法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通用构造器写法")]),s._v("\nh1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'md5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nh1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nh2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ripemd160'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nh2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("h2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看可用的消息摘要算法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("algorithms_guaranteed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("algorithms_available"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("ol",[a("li",[a("code",[s._v("hash.update(data)")]),s._v("，"),a("strong",[s._v("哈希基于字节")]),s._v("而非字符，所以传入字符串对象是不被支持的；")]),s._v(" "),a("li",[a("code",[s._v("hash.digest()")]),s._v(" 以字节形式返回当前已传给 "),a("code",[s._v("update()")]),s._v(" 方法的数据摘要；")]),s._v(" "),a("li",[a("code",[s._v("hash.hexdigest()")]),s._v(" 摘要会以两倍长度字符串对象的形式返回，其中仅包含十六进制数码。（这可以被用于"),a("strong",[s._v("在电子邮件或其他非二进制环境中安全地交换数据值")]),s._v("）")]),s._v(" "),a("li",[a("code",[s._v("hashlib.new(name[, data])")]),s._v(" 允许访问 “总是可用的” 和\n“OpenSSL 提供的” hash 算法，如本例的 "),a("code",[s._v("ripemd160")]),s._v(" 算法。")]),s._v(" "),a("li",[s._v("查看可用的哈希算法：\n"),a("ol",[a("li",[a("code",[s._v("hashlib.algorithms_guaranteed")]),s._v(" 所有平台上都可用的哈希算法的集合；")]),s._v(" "),a("li",[a("code",[s._v("hashlib.algorithms_available")]),s._v(" 所运行的 python环境上上可用的哈希算法的集合。")])])])]),s._v(" "),a("p",[s._v("开发中一般使用消息摘要算法计算用户的口令，然后将用户名和 hash 值存储到数据库中，用户登录时使用哈希后的值与数据库中保存的值进行对比。")]),s._v(" "),a("h2",{attrs:{id:"为消息-加盐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为消息-加盐"}},[s._v("#")]),s._v(" 为消息“加盐”")]),s._v(" "),a("p",[s._v("假设黑客拿到数据库的权限，可以获取哈希后的密文，那我们的用户数据还安全吗？")]),s._v(" "),a("p",[s._v("通过哈希算法反推用户的明文口令是比较困难的，但黑客可以使用哈希算法去计算如 "),a("code",[s._v("'123456'")]),s._v("、"),a("code",[s._v("'88888888'")]),s._v("、"),a("code",[s._v("'password'")]),s._v(" 等弱口令去撞数据库的密文，从而获得使用弱口令的用户账号。")]),s._v(" "),a("p",[s._v("所以，实际开发中会对用户的原始口令附加一个字符串后再使用哈希计算，这一过程称为“加盐”。（这一字符串的选择与加密内容的构造可以使用多种方案，如使用用户名）")]),s._v(" "),a("p",[s._v("加盐示例：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("md5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加盐")]),s._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"templar"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("code",[s._v("hashlib")]),s._v(" 模块提供的 "),a("code",[s._v("pbkdf2_hmac")]),s._v(" 方法包含加盐功能，示例如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hashlib\n\ndk "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hashlib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pbkdf2_hmac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"md5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('b"The mysteries cannot protect themselves."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'templar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("hex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"hmac-基于秘钥的消息验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hmac-基于秘钥的消息验证"}},[s._v("#")]),s._v(" hmac 基于秘钥的消息验证")]),s._v(" "),a("p",[a("code",[s._v("hmac")]),s._v(" 模块实现了 HMAC 算法，HMAC（Keyed-Hashing for Message Authentication Code）算法是一种基于 hash 函数和秘钥进行消息验证的方法。基于秘钥的消息验证就是"),a("strong",[s._v("把之前的 "),a("code",[s._v("salt")]),s._v(" 看做是秘钥，根据不同的秘钥计算出不同的哈希")]),s._v("，验证哈希值时同样需提供对应的秘钥。")]),s._v(" "),a("p",[s._v("示例（接口同 "),a("code",[s._v("hashlib")]),s._v(" 模块）：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hmac\n\ndk "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hmac"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'templar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'The mysteries cannot protect themselves.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\tdigestmod"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MD5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),a("ol",[a("li",[s._v("官网 "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/hashlib.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("hashlib"),a("OutboundLink")],1),s._v(" | "),a("a",{attrs:{href:"https://docs.python.org/3.5/library/hmac.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("hmac"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.openssl.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("OpenSSL"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);